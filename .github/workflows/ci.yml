name: ci
on:
  pull_request:
  push:
    branches:
    - master
  # schedule:
  # - cron: '00 01 * * *'
jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
        # - pinned
        # - stable
        # - beta
        # - nightly
        - win-gnu
        # - linux
        # - macos
        include:
        # - build: pinned
        #   os: windows-2019
        #   rust: 1.34.0
        # - build: stable
        #   os: windows-2019
        #   rust: stable
        # - build: beta
        #   os: windows-2019
        #   rust: beta
        # - build: nightly
        #   os: ubuntu-18.04
        #   rust: nightly
        - build: win-gnu
          os: windows-2019
          rust: stable-x86_64-gnu
        # - build: linux
        #   os: ubuntu-18.04
        #   rust: stable
        # - build: macos
        #   os: macos-latest
        #   rust: stable
    steps:
    - name: Cache msys2
      id: cache-msys2
      uses: actions/cache@v1
      with:
        path: msys64
        key: msys2-x64
    - name: Install msys2
      if: steps.cache-msys2.outputs.cache-hit != 'true'
      run: |
        (New-Object net.webclient).DownloadFile("http://repo.msys2.org/distrib/x86_64/msys2-base-x86_64-20190524.tar.xz","msys2.tar.xz")
        tar xf msys2.tar.xz -C $env:GITHUB_WORKSPACE.Replace("\", "/")
    - run: |
        $env:MSYSTEM = "MINGW64"
        $env:MSYS2_PATH_TYPE = "strict"
        $script = @'
          uname -m
          uname -a
          echo $PATH
        '@
        & "$env:GITHUB_WORKSPACE\msys64\usr\bin\bash" -c -l $script
    - name: Pacman
      run: |
        $env:MSYSTEM = "MINGW64"
        $env:MSYS2_PATH_TYPE = "strict"
        $script = @'
          # pacman --noconfirm -Syu
          pacman --noconfirm -S msys/gcc
          if [ "$MSYSTEM" = "MINGW32" ]; then
            pacman --noconfirm -S mingw32/mingw-w64-i686-gcc
          else
            pacman --noconfirm -S mingw64/mingw-w64-x86_64-gcc
          fi
          pacman --noconfirm -S make
        '@
        & "$env:GITHUB_WORKSPACE\msys64\usr\bin\bash" -c -l $script
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Install Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    # - run: cargo build --manifest-path fitsio/Cargo.toml --verbose
    # - run: cargo doc --manifest-path fitsio/Cargo.toml --verbose
    # - run: cargo test --manifest-path fitsio/Cargo.toml --verbose

  # rustfmt:
  #   name: rustfmt
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 1
  #   - name: Install Rust
  #     uses: hecrj/setup-rust-action@v1
  #     with:
  #       rust-version: stable
  #   - name: Install rustfmt
  #     run: rustup component add rustfmt
  #   - name: Check formatting
  #     run: |
  #       cargo fmt --all -- --check
